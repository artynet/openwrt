Description: Modify data loading memory management to avoid crashes.
This patch fixes a crash in audsp in Festival and other
memory leaks.
Bug: #601294
Author: Samuel Thibault.

--- a/base_class/rateconv.cc
+++ b/base_class/rateconv.cc
@@ -431,7 +431,7 @@
 
 static int ioerr(void)
 {
-    delete g_coep;
+    delete[] g_coep;
     return -1;
 }
 
@@ -585,7 +585,7 @@
 	    return ioerr();
     } while (outsize == OUTBUFFSIZE); 
 
-    delete g_coep;
+    delete[] g_coep;
 
     *osize = outpos;
 
--- a/stats/EST_Discrete.cc
+++ b/stats/EST_Discrete.cc
@@ -151,7 +151,7 @@
  
     for (i=0; i<next_free; i++)
 	delete discretes[i];
-    delete discretes;
+    delete[] discretes;
 }
 
 const int Discretes::def(const EST_StrList &vocab)
@@ -165,7 +165,7 @@
 	for (i=0; i<next_free; i++)
 	    new_discretes[i] = discretes[i];
 	max *= 2;
-	delete discretes;
+	delete[] discretes;
 	discretes = new_discretes;
     }
 
--- a/base_class/string/EST_String.cc
+++ b/base_class/string/EST_String.cc
@@ -329,6 +329,7 @@
 	  p += length;
 	  at=end;
 	}
+   if (p != from+at)
       memcpy(p, from+at, size-at);
 
       p += size-at;
--- a/speech_class/EST_WaveFile.cc
+++ b/speech_class/EST_WaveFile.cc
@@ -90,7 +90,10 @@
 
   if (status == read_ok)
     {
-      wv.values().set_memory(data, 0, nsamp, nchan, TRUE);
+      short *data2 = new short[nsamp*nchan];
+      memcpy(data2, data, nsamp*nchan*sizeof(short));
+      wfree(data);
+      wv.values().set_memory(data2, 0, nsamp, nchan, TRUE);
       wv.set_sample_rate(srate);
     }
 
