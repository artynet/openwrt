From 9f310caf211f6e34c7c4a3f84dea1f6f6bdc2c50 Mon Sep 17 00:00:00 2001
From: Martino Facchin <m.facchin@arduino.cc>
Date: Thu, 16 Feb 2017 16:20:31 +0100
Subject: [PATCH 2/3] adding download+reset combo command for stm32 devices

---
 dfu-util-0.9/src/dfu_util.h |  3 ++-
 dfu-util-0.9/src/main.c     | 30 +++++++++++++++++++++++-------
 2 files changed, 25 insertions(+), 8 deletions(-)

diff --git a/dfu-util-0.9/src/dfu_util.h b/dfu-util-0.9/src/dfu_util.h
index d636393..65c7871 100644
--- a/src/dfu_util.h
+++ b/src/dfu_util.h
@@ -12,7 +12,8 @@ enum mode {
 	MODE_DETACH,
 	MODE_UPLOAD,
 	MODE_DOWNLOAD,
-	MODE_RESET_STM32
+	MODE_RESET_STM32,
+	MODE_DOWNLOAD_RESET
 };

 extern struct dfu_if *dfu_root;
diff --git a/dfu-util-0.9/src/main.c b/dfu-util-0.9/src/main.c
index a814c7d..49963e0 100644
--- a/src/main.c
+++ b/src/main.c
@@ -183,6 +183,8 @@ static void help(void)
 		"  -D --download <file>\t\tWrite firmware from <file> into device\n"
 		"  -R --reset\t\t\tIssue USB Reset signalling once we're finished\n"
 		"  -r --reset-stm32\t\tFollow STM32 DFU reset procedures to start firmware\n"
+		"  -O --download-reset <file>\tDownload firmware to MCU and reset\n"
+		"  -f --vector-address <address>\tSpecify custom vector address for reset\n"
 		"  -s --dfuse-address <address>\tST DfuSe mode, specify target address for\n"
 		"\t\t\t\traw file download or upload. Not applicable for\n"
 		"\t\t\t\tDfuSe file (.dfu) downloads\n"
@@ -222,6 +224,8 @@ static struct option opts[] = {
 	{ "reset", 0, 0, 'R' },
 	{ "dfuse-address", 1, 0, 's' },
 	{ "reset-stm32", 0, 0, 'r' },
+	{ "download-reset", 1, 0, 'O' },
+	{ "vector-address", 1, 0, 'f' },
 	{ 0, 0, 0, 0 }
 };

@@ -240,6 +244,7 @@ int main(int argc, char **argv)
 	int dfuse_device = 0;
 	int fd;
 	const char *dfuse_options = NULL;
+	int vector_address = 0x08000000;
 	int detach_delay = 5;
 	uint16_t runtime_vendor;
 	uint16_t runtime_product;
@@ -251,7 +256,7 @@ int main(int argc, char **argv)

 	while (1) {
 		int c, option_index = 0;
-		c = getopt_long(argc, argv, "hVvleE:d:p:c:i:a:S:t:U:D:Rs:Z:K:", opts,
+		c = getopt_long(argc, argv, "hVvleE:d:p:c:i:a:S:t:U:D:Rs:Z:K:r:O:f:", opts,
 				&option_index);
 		if (c == -1)
 			break;
@@ -323,9 +328,16 @@ int main(int argc, char **argv)
 		case 'r':
 			mode = MODE_RESET_STM32;
 			break;
+		case 'O':
+			mode = MODE_DOWNLOAD_RESET;
+			file.name = optarg;
+			break;
 		case 's':
 			dfuse_options = optarg;
 			break;
+		case 'f':
+			vector_address = parse_number("vector-address", optarg);
+			break;
 		default:
 			help();
 			break;
@@ -338,7 +350,7 @@ int main(int argc, char **argv)
 	}

 	if (mode == MODE_NONE) {
-		fprintf(stderr, "You need to specify one of -D or -U\n");
+		fprintf(stderr, "You need to specify one of -D or -O or -U\n");
 		help();
 	}

@@ -347,7 +359,7 @@ int main(int argc, char **argv)
 		match_config_index = -1;
 	}

-	if (mode == MODE_DOWNLOAD) {
+	if (mode == MODE_DOWNLOAD || mode == MODE_DOWNLOAD_RESET) {
 		dfu_load_file(&file, MAYBE_SUFFIX, MAYBE_PREFIX);
 		/* If the user didn't specify product and/or vendor IDs to match,
 		 * use any IDs from the file suffix for device matching */
@@ -640,6 +652,7 @@ status_again:
 		break;

 	case MODE_DOWNLOAD:
+	case MODE_DOWNLOAD_RESET:
 		if (((file.idVendor  != 0xffff && file.idVendor  != runtime_vendor) ||
 		     (file.idProduct != 0xffff && file.idProduct != runtime_product)) &&
 		    ((file.idVendor  != 0xffff && file.idVendor  != dfu_root->vendor) ||
@@ -657,14 +670,17 @@ status_again:
 		} else {
 			if (dfuload_do_dnload(dfu_root, transfer_size, &file) < 0)
 				exit(1);
-	 	}
-		break;
+		}
+		if (mode != MODE_DOWNLOAD_RESET) {
+			break;
+		}
+		//fallthrough (no break) is intentional for MODE_DOWNLOAD_RESET
 	case MODE_RESET_STM32:
 		//ST Application Note 3156 Documents how to reset an STM32 out of DFU mode and into firmware mode
 		//Basicly, send the target vector reset address, then a zero-length download command, then by a get status command.

-		printf("Resetting STM32, starting firmware at address 0x08000000...\n");
-		int set_ret = dfuse_special_command(dfu_root, 0x08000000, SET_ADDRESS);
+		printf("Resetting STM32, starting firmware at address 0x0%X...\n", vector_address);
+		int set_ret = dfuse_special_command(dfu_root, vector_address, SET_ADDRESS);
 		if( set_ret < 0 ) {
 			printf("Error: Unable to set start address for reseting\n");
 			exit(1);
--
2.11.0
