Description: Fix memory allocation to refer to the intended types.
Author: Peter Drysdale
Forwarded: Yes
--- a/src/modules/hts_engine/HTS_pstream.c
+++ b/src/modules/hts_engine/HTS_pstream.c
@@ -324,7 +324,7 @@
       /* copy dynamic window */
       pst->win_l_width = (int *) HTS_calloc(pst->win_size, sizeof(int));
       pst->win_r_width = (int *) HTS_calloc(pst->win_size, sizeof(int));
-      pst->win_coefficient = (double **) HTS_calloc(pst->win_size, sizeof(double));
+      pst->win_coefficient = (double **) HTS_calloc(pst->win_size, sizeof(double *));
       for (j = 0; j < pst->win_size; j++) {
          pst->win_l_width[j] = HTS_SStreamSet_get_window_left_width(sss, i, j);
          pst->win_r_width[j] = HTS_SStreamSet_get_window_right_width(sss, i, j);
--- a/src/modules/hts_engine/HTS_sstream.c
+++ b/src/modules/hts_engine/HTS_sstream.c
@@ -293,7 +293,7 @@
       sst->win_max_width = HTS_ModelSet_get_window_max_width(ms, i);
       sst->win_l_width = (int *) HTS_calloc(sst->win_size, sizeof(int));
       sst->win_r_width = (int *) HTS_calloc(sst->win_size, sizeof(int));
-      sst->win_coefficient = (double **) HTS_calloc(sst->win_size, sizeof(double));
+      sst->win_coefficient = (double **) HTS_calloc(sst->win_size, sizeof(double *));
       for (j = 0; j < sst->win_size; j++) {
          sst->win_l_width[j] = HTS_ModelSet_get_window_left_width(ms, i, j);
          sst->win_r_width[j] = HTS_ModelSet_get_window_right_width(ms, i, j);
