From d306361c903e4175250ee2788d3f4358e4f4aeed Mon Sep 17 00:00:00 2001
From: Davide Ciminaghi <ciminaghi@gnudd.com>
Date: Fri, 7 Nov 2014 10:55:05 +0100
Subject: [PATCH 174/188] TEMPORARY HWMON, sht21: check crc8 from sensor

---
 drivers/hwmon/sht21.c |   27 ++++++++++++++++++++-------
 1 file changed, 20 insertions(+), 7 deletions(-)

diff --git a/drivers/hwmon/sht21.c b/drivers/hwmon/sht21.c
index 45b1c21..bebb38a 100644
--- a/drivers/hwmon/sht21.c
+++ b/drivers/hwmon/sht21.c
@@ -1,3 +1,5 @@
+
+#define DEBUG
 /* Sensirion SHT21 humidity and temperature sensor driver
  *
  * Copyright (C) 2010 Urs Fleisch <urs.fleisch@sensirion.com>
@@ -113,7 +115,7 @@ static int sht21_update_measurements_hold(struct i2c_client *client)
 	 * maximum two measurements per second at 12bit accuracy shall be made.
 	 */
 	if (time_after(jiffies, sht21->last_update + HZ / 2) || !sht21->valid) {
-		u8 data[3];
+		u8 data[3], c;
 		u16 raw;
 
 
@@ -123,10 +125,13 @@ static int sht21_update_measurements_hold(struct i2c_client *client)
 		if (ret < 0)
 			goto out;
 
-		if (crc8(crc_table, data, 2, 0) != data[2]) {
-			dev_err(&client->dev, "WRONG CRC8\n");
+		c = crc8(crc_table, data, 2, 0);
+		if (c != data[2]) {
+			dev_err(&client->dev,
+				"WRONG CRC8, 0x%02x, exp 0x%02x\n", data[2], c);
 			goto out;
-		}
+		} else
+			dev_dbg(&client->dev, "CRC8 OK: 0x%02x\n", c);
 
 		raw = (data[0] << 8) | data[1];
 
@@ -152,9 +157,10 @@ static s32 __do_update_nohold(struct i2c_client *client, u8 command,
 			      unsigned long timeout)
 {
 	s32 ret = 0;
+	u8 c;
 	unsigned long start;
 	union {
-		u8 c[2];
+		u8 c[3];
 		u16 val;
 	} v;
 
@@ -167,8 +173,15 @@ static s32 __do_update_nohold(struct i2c_client *client, u8 command,
 		ret = i2c_master_recv(client, v.c, sizeof(v));
 	} while(ret < 0 && !time_after(jiffies, start + timeout));
 
-	pr_debug("%s: c[0] = 0x%02x, c[1] = 0x%02x, v = 0x%04x\n",
-		 __func__, v.c[0], v.c[1], v.val);
+	pr_debug("%s: c[0] = 0x%02x, c[1] = 0x%02x, c[2] = 0x%02x,v = 0x%04x\n",
+		 __func__, v.c[0], v.c[1], v.c[2], v.val);
+	c = crc8(crc_table, v.c, 2, 0);
+	if (c != v.c[2]) {
+		dev_err(&client->dev,
+			"WRONG CRC8, 0x%02x, exp 0x%02x\n", v.c[2], c);
+		return -EIO;
+	} else
+		dev_dbg(&client->dev, "CRC8 OK: 0x%02x\n", c);
 	return v.val;
 }
 
-- 
1.7.9.5

