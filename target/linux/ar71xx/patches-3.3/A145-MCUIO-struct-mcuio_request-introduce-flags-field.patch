From 0f7bca2a9587b3f8841968b72b2258991f73b778 Mon Sep 17 00:00:00 2001
From: Davide Ciminaghi <ciminaghi@gnudd.com>
Date: Fri, 3 Oct 2014 05:49:15 +0200
Subject: [PATCH 145/188] MCUIO: struct mcuio_request: introduce flags field

---
 drivers/mcuio/mcuio-hc-drv.c |    6 +++---
 include/linux/mcuio.h        |   26 +++++++++++++++++++++++---
 2 files changed, 26 insertions(+), 6 deletions(-)

diff --git a/drivers/mcuio/mcuio-hc-drv.c b/drivers/mcuio/mcuio-hc-drv.c
index 105a8fb..9bc16cd 100644
--- a/drivers/mcuio/mcuio-hc-drv.c
+++ b/drivers/mcuio/mcuio-hc-drv.c
@@ -146,7 +146,7 @@ static void __dequeue_request(struct mcuio_request *r)
 static void __request_to_packet(struct mcuio_request *r, struct mcuio_packet *p)
 {
 	mcuio_packet_set_addr(p, r->hc->bus, r->dev, r->func, r->offset,
-			      r->type, r->fill);
+			      r->type, mcuio_request_is_fill(r));
 	if (mcuio_packet_is_read(p)) {
 		p->data[0] = p->data[1] = 0;
 		return;
@@ -170,7 +170,7 @@ static void __init_request(struct mcuio_request *r,
 	r->offset = offset;
 	r->offset_mask = offset_mask;
 	r->status = -ETIMEDOUT;
-	r->fill = fill;
+	mcuio_request_set_fill(r, fill);
 }
 
 struct mcuio_request *mcuio_make_request(struct mcuio_device *mdev,
@@ -385,7 +385,7 @@ static int __receive_messages(void *__data)
 				__copy_data(r->data, p, 1);
 		} else {
 			r->offset = mcuio_packet_offset(p);
-			r->fill = mcuio_packet_is_fill_data(p);
+			mcuio_request_set_fill(r, mcuio_packet_is_fill_data(p));
 			__copy_data(r->data, p, 1);
 		}
 		if (r->cb)
diff --git a/include/linux/mcuio.h b/include/linux/mcuio.h
index fe6581d..1177d7b 100644
--- a/include/linux/mcuio.h
+++ b/include/linux/mcuio.h
@@ -66,6 +66,15 @@ struct mcuio_request;
 typedef void (*request_cb)(struct mcuio_request *);
 
 /*
+ * mcuio request flags
+ */
+/*
+ * fill: if this is !0 the resulting request packet shall have its fill data
+ *       flag set
+ */
+#define MCUIO_REQUEST_FILL BIT(0)
+
+/*
  * This represents an mcuio request
  * @hc: pointer to host controller mcuio device
  * @dev: destination device
@@ -81,8 +90,7 @@ typedef void (*request_cb)(struct mcuio_request *);
  * @list: used for enqueueing requests
  * @to_work: delayed_work struct for request timeout management
  * @priv: private data. FIX THIS
- * @fill: if this is !0 the resulting request packet shall have its fill data
- *	  flag set
+ * @flags: request flags (MCUIO_REQUEST_XXX)
  * @release: pointer to memory release function
  */
 struct mcuio_request {
@@ -99,10 +107,22 @@ struct mcuio_request {
 	struct list_head list;
 	struct delayed_work to_work;
 	void *priv;
-	int fill;
+	unsigned int flags;
 	void (*release)(struct mcuio_request *);
 };
 
+static inline int mcuio_request_is_fill(struct mcuio_request *r)
+{
+	return r->flags & MCUIO_REQUEST_FILL;
+}
+
+static inline void mcuio_request_set_fill(struct mcuio_request *r, int f)
+{
+	r->flags &= ~MCUIO_REQUEST_FILL;
+	if (f)
+		r->flags |= MCUIO_REQUEST_FILL;
+}
+
 /*
  * Submit a request, block until request done
  *
-- 
1.7.9.5

