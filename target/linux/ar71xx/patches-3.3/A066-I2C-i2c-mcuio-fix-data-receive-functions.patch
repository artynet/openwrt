From 76962737a06a56f15ab73d4cf072d14a116c131c Mon Sep 17 00:00:00 2001
From: Davide Ciminaghi <ciminaghi@gnudd.com>
Date: Fri, 15 Aug 2014 00:34:37 +0200
Subject: [PATCH 066/115] I2C, i2c-mcuio: fix data receive functions

---
 drivers/i2c/busses/i2c-mcuio.c | 31 ++++++++++++++++---------------
 1 file changed, 16 insertions(+), 15 deletions(-)

diff --git a/drivers/i2c/busses/i2c-mcuio.c b/drivers/i2c/busses/i2c-mcuio.c
index 00a1599..f24bd88 100644
--- a/drivers/i2c/busses/i2c-mcuio.c
+++ b/drivers/i2c/busses/i2c-mcuio.c
@@ -98,25 +98,28 @@ static int __send_data(struct mcuio_i2c_dev *i2cd, u32 *buf, int len,
 static int __receive_data(struct mcuio_i2c_dev *i2cd, u32 *buf, int len,
 			  int *tail)
 {
-	int i, ret = 0;
+	int i, j, actual, t, ret = 0;
 
-	if (len % sizeof(u32)) {
-		WARN_ON(1);
-		return -EINVAL;
-	}
 	dev_dbg(&i2cd->mdev->dev, "len = %d\n", len);
 	/* TERRIBLE HACK: FIX THIS BY WRITING BYTE BY BYTE */
-	for (i = 0; i < len/sizeof(u32) && ret >= 0; i++) {
+	for (i = 0, j = 0, t = (*tail) & ~0x03;
+	     i < len && ret >= 0;
+	     i += actual, t += sizeof(u32), j++) {
 		u32 v;
-		ret = regmap_read(i2cd->map, I2C_MCUIO_IBUF + *tail, &v);
+		ret = regmap_read(i2cd->map, I2C_MCUIO_IBUF + t, &v);
 		if (ret < 0) {
 			dev_err(&i2cd->mdev->dev, "error reading message\n");
-			continue;
+			break;
 		}
-		buf[i] = le32_to_cpu(v);
+		buf[j] = le32_to_cpu(v);
 		dev_dbg(&i2cd->mdev->dev, "read 0x%08x from 0x%04x\n",
-			buf[i], I2C_MCUIO_IBUF + *tail);
-		*tail = (*tail + sizeof(u32)) & (i2cd->buf_size - 1);
+			buf[j], I2C_MCUIO_IBUF + t);
+		actual = sizeof(u32);
+		if (!i)
+			actual -= *tail - t;
+		actual = min(actual, (len - i));
+
+		*tail = (*tail + actual) & (i2cd->buf_size - 1);
 	}
 	return ret < 0 ? ret : len;
 }
@@ -181,15 +184,13 @@ static int __get_ibuf(struct mcuio_i2c_dev *i2cd)
 			"error reading input buffer head\n");
 		return stat;
 	}
-	count = (CIRC_CNT(h, t, i2cd->buf_size) / sizeof(u32)) * sizeof(u32);
+	count = CIRC_CNT(h, t, i2cd->buf_size);
 	dev_dbg(&i2cd->mdev->dev, "h = %u, t = %u, count = %d\n", h, t, count);
 	if (!count) {
 		dev_dbg(&i2cd->mdev->dev, "nothing in input buffer\n");
 		return 0;
 	}
-	togo = ((i2cd->olen - i2cd->received)/sizeof(u32)) * sizeof(u32);
-	if ((i2cd->olen - i2cd->received) % sizeof(u32))
-		togo += sizeof(u32);
+	togo = i2cd->ilen - i2cd->received;
 	l = min(count, togo);
 	dev_dbg(&i2cd->mdev->dev, "togo = %d, %p\n", togo,
 		&i2cd->buf.dw[i2cd->received/sizeof(u32)]);
-- 
1.9.1

